name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        run: pnpm lint

      - name: Type check
        run: pnpm type-check

  release:
    name: Release
    needs: lint
    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.semantic.outputs.new_release_published }}
      version: ${{ steps.semantic.outputs.new_release_version }}
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  desktop-build:
    name: Build Desktop Apps
    needs: release
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
            artifact: exe
          - os: macos-latest
            platform: mac
            artifact: dmg
          - os: ubuntu-latest
            platform: linux
            artifact: AppImage

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build web app
        run: pnpm build

      - name: Install desktop dependencies
        run: cd apps/desktop && npm install

      - name: Build desktop app
        run: cd apps/desktop && npm run build:${{ matrix.platform }}

      - name: List generated files
        run: |
          echo "=== Contents of apps/desktop/dist ==="
          ls -la apps/desktop/dist/ || echo "Directory not found"
          echo "=== All .exe files ==="
          find apps/desktop -name "*.exe" || echo "No .exe files found"
          echo "=== All .dmg files ==="
          find apps/desktop -name "*.dmg" || echo "No .dmg files found"
          echo "=== All .AppImage files ==="
          find apps/desktop -name "*.AppImage" || echo "No .AppImage files found"
        shell: bash

      - name: Get current version
        id: current_version
        run: |
          VERSION=$(grep -o "[0-9]\+\.[0-9]\+\.[0-9]\+" src/constants/version.ts)
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Upload artifacts to current release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.current_version.outputs.tag }}
          files: |
            apps/desktop/dist/*.exe
            apps/desktop/dist/*.dmg
            apps/desktop/dist/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
